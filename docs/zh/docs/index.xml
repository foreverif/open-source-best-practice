<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Example Site on 开源最佳实践</title>
    <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/</link>
    <description>Recent content in Example Site on 开源最佳实践</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://linuxsuren.github.io/open-source-best-practice/zh/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/encourage-community-members/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/open-source-best-practice/zh/docs/encourage-community-members/</guid>
      <description>如何通过适当的机制给予社区贡献者一定的激励 #  首先，需要明确的是：激励不能等同于劳务报酬，更加不是“外快”，激励是要对有意愿和动力的贡献者加以认可，给予一定的物质反馈。
激励的形式，可以有：社区活动相关的差旅补助、周边礼品、社区荣誉、社区重要角色提名、资金赞助等。
差旅补助 #  对于在社区中有重大贡献的，在类似于社区年度大会中，给予一定的差旅报销额度。对此，我们需要解决下面的问题：
 什么算是重大贡献 差旅报销额度 同一贡献者给予补助的周期（例如：不可连续） 资金来源、资金池的管理  周边礼品 #  社区荣誉 #  常见的社区荣誉有：Top Ambassdor、Top Contributor、New Ambassdor
重要角色提名 #  根据社区的实际组织架构，这里的重要角色可以有：SIG Co-leader、TOC member
对于已经在社区中作出重大贡献（不局限于代码），尤其是已经体现出来一定的领导力的贡献者，社区应该及时提名担任更加重要的角色。这对于社区和贡献者都有着重要的意义。
资金赞助 #  如何让外部贡献者更加有动力 #  贡献者包括两类：游客（偶发性、简单的）、实际用户。对于这两种贡献者都要加以重视，但需施以不同的策略。
游客 #  最核心的是——要把参与贡献的难度降到最低，让短暂、偶发性贡献成为可能。
实际用户 #  社区的实际用户参与贡献是有切实的、可持续的动力的，这应该成为我们重点。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/encourage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/open-source-best-practice/zh/docs/encourage/</guid>
      <description>目标读者：了解参与开源的益处，希望能激励更多团队成员参与开源。
 如果你已经深刻地明白了参与开源的各种益处，那么，该如何鼓励、激励团队中其他成员积极地参与到开源社区建设中呢。
我们首先需要认识到，开源项目和闭源项目的协作方式上，有非常大的区别。单纯地给团队成员分享参与开源的好处，往往是收效甚微。每个人的过往经历各不相同，思维方式，认知等都有着不同程度的差异。甚至，在特定的阶段中，并不是每个人都适合参与开源。因此，设定一个合适的激励政策就非常重要了，需要通过挖掘、鼓励、激励的方式让一部分人先动起来，让这部分人尝到了好处、感受到开源的氛围。然后，再进一步巩固参与开源的成果。
参与开源并不只有提交代码这一种方式，有参与开源的兴趣、热情就成功了一半。每个人都可以应该先做自己擅长的事情，以增加参与的自信心。
积分制度 #  在条件允许的情况下，可以参考如下的激励制度：
实行参与开源积分制，并定期（或不定期）根据积分来兑换奖励
 公开演讲  meetup 演讲，200 积分 技术峰会、Conference，500 积分 全球大型技术峰会，800 积分 对于使用第二语言（非母语）进行分享的情况，额外增加 100 积分   向上游社区提交 PR  普通缺陷修复、小的功能点，100 积分 重大缺陷、大的功能，300 积分   以组织者、志愿者等身份参与社区活动  在开源社区、开源基金会中被选为 Ambassador， 200 积分 在开源社区、开源基金会上给予年度性的奖励（例如：最佳贡献者、最佳布道者等），200～500 积分 在其他社区担任 SIG Leader 等角色，500 积分 成为上游社区项目的 Member，500 积分 成为上游社区项目的 Maintainer，1000 积分 此处，可根据不同的上游社区的要求的高低给予不同的积分    以上的活动建议以及积分数只是方向性指导，具体实施时应根据具体情况来定。建议 1 积分对应 1 人民币，达到 1000 积分后，可以消费积分来购买等价的商品，团队给予全额报销。
 开源社区内，非常需要跨技能的合作，例如：运营、研发、测试等角色之间互相了解、配合。因此，建议对于跨职能的贡献行为予以鼓励和支持。同样地，对于运营、产品等职位的同学，公开演讲在某些团队中如果是作为本职工作的话，不建议参与积分。
 方向选择 #  为了让大家在选择上游社区时，更加聚焦、对团队帮忙更大，建议优先选择如下的项目：</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/etiquette/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/open-source-best-practice/zh/docs/etiquette/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/good-first-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/open-source-best-practice/zh/docs/good-first-issue/</guid>
      <description>开源项目的贡献者群体，大致呈倒金字塔的形态。
项目的管理、规划、主要特性开发或重大缺陷的修复，这些通常是由少量核心的贡献者完成，这可以认为是金字塔的顶部驱动。
还有一些贡献者，提交记录不是很多，但项目参与度也比较紧密；这类贡献者的数量通常也不少，可以认为是金字塔中间力量。
数量最大的部分，是那些有着零星贡献提交记录的贡献者，也正是我们现在讨论的重点：“游客”贡献者。这些“游客”虽然不会贡献重量级的内容，但对一个开源项目而言，同样是有着非常重要的意义：
 每一位重要的贡献者都是从“游客”开始的，我们想要增加贡献者的数量和“质量”也要从这里着手 源源不断的“游客”加入，可以让项目呈现出繁荣的景象 新人友好程度是开源项目的成熟标志之一  那么，什么样的 issue 可以标记为 good-first-issue 呢？从字面上看，这是对新人（初次接触）友好的 issues，也就是对于这类贡献者而言比较容易解决的 issue。
因此，判断是否应该把一个 issue 标记为 good-first-issue 可以从这两个角度考虑：
  如何定义“新人”？
  如何定义“友好”？这里的“友好”，一方面是指参与流程的清晰（当然，这是更广泛的社区治理的范畴），另一方面是指参与要求的明确
   有清晰的技术栈要求  “新人”和技术水平的高低无关，只表明初次接触某个项目 从更加客观的角度来讲，issue 的创建者可以列举出来完成这个 issue 所需要的技能   有清晰的上下文描述  即使技术水平”高“的贡献者，在不了解 issue 的上下文、背景的前提下，依然是很难去完成 解决 issue 需要的技能   没有明显（或潜在）的时间约束  我们不清楚“新人”什么时候会关注到这些 issue，因此，不要把这些 issue 和你的 milestone（或其他版本发布计划）挂钩   有助于贡献者了解项目结构（可选）  “新人”完成 good-first-issue 的价值不仅仅是可以增加贡献者数量，更有意义的地方在于：可以帮忙更多贡献者进一步熟悉、了解项目的贡献流程以及项目本身    模板 #  为了方便大家对 good-first-issue 有更形象的认识，我下面给出一个模板：</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/mentor-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/open-source-best-practice/zh/docs/mentor-plan/</guid>
      <description>如何让开源社区持续保持活跃 #  开源导师计划 #  开源导师计划，为了给有兴趣深入参与开源，并希望得到一定指导的人一次共同学习的机会。
需要注意的是，导师制并不是要培训、讲解如何参与开源，更不是教你学习任何具体的技术。这个计划大致的形式是：导师给出一系列任务，参与者来完成任务。以下是细节：
周期 #  一年
参与者人数 #  不超过两人
进度同步 #  两周一次
任务 #  参与者需要和导师共同制定要完成的任务，并明确完成的标准。导师应该根据学员的具体情况给出相应的指导意见。
选择一上游社区并跟进 #  形式包括但不限于：
 每月至少参与一次社区例会 了解社区运营方式 至少参与一次社区的活动 提交一次代码 PR，已经其他 PR 若干  跟进本社区的一名外部贡献者 #  形式包括但不限于：
 积极跟进对方提的 issue 或者 PR 了解对方在参与奔社区过程中遇到的困境，并设法解决 进行2～3次的访谈，并形成文字记录  成果展示 #  一个季度一次
 技术博文 社区动态介绍，包括：技术、社区活动 视频教程 所跟进的外部贡献者的成果，收到的反馈  通用技能 #   英语（听说读写） 演讲  同步、交流 #   例会，两周一次 成果展示，每月一次  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/open-source-best-practice/zh/docs/motivation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/open-source-best-practice/zh/docs/motivation/</guid>
      <description>开源是什么 #  在很多地方，开源更多的是在说“开源软件”。但，除了软件以外，开源精神最具有启发性的在于——人和人之间的协作方式上，平等、开放、协作、共享。
 平等，人与人之间没有等级、阶层之分，主要体现在讨论问题、决策过程中，大家基于共识而不是权利 开放，这一点强调的是，整个开源活动应该是公开的，包括：提议、过程、结果 协作，避免单打独斗、英雄主义、个人主义 共享，乐于分享协作成果，以及成果的二次创作  为什么要参与开源 #  基于开源协作的特性，你的舞台不再局限于某个公司、某个团队，你所需要思考的也不再只是编码、测试、设计、推广等单一的角度。对于不同（岗位）角色的人来说，参与开源的意义略有不同，下面会分别讨论。但，确认无疑的是，你一定是有机会去从不同的视角来考虑问题、承担责任。
研发 #  对于在从事研发类（包括：开发、架构设计、测试、运维等）工作的人而言，是非常适合参与开源的。通过在开源社区的磨砺，大致可以从如下几个方面得到提升：
 技术成长 软实力 职业方向多样化 其他  技术成长 #  企业内部项目的生命流程，通常都会和公司的商业模式、市场价值、经营水平有着密切的关系，企业为了最求价值的最大化，完全可以新开发一个项目、或者直接下线一个项目。尤其对于普通的研发人员，往往是没有任何发言权的。而对于项目上的技术、框架选型，在垂直型结构的团队中也是“领导”决定的。
因而，可以想象到，普通的研发人员在日常的研发工作中往往会处于被动的地位，被动地去学习、使用某种技术，被动地去完成某项任务。在这种环境下，大部分人的创新、主管能动性是难以调动起来的。很多 IT 从业人员，也就会有“打工”、“北漂”的深切感受。
在开源项目中，往往是没有明显的阶级、等级之分，所有的任务（issues）都是自愿、主动在做，而每个人都可以向社区提出你的提议，社区成员也会基于共识、规范来 review 你的 PR 或者提议。而在 review（不是审核、审查）过程中，你也许会收到在这个领域非常资深、经验丰富的贡献者的反馈。
软实力 #  好的沟通能力，在开源项目中是很基础的能力之一。在开源协作过程中，由于地域、文化、时区的不同，大部分的交流是异步进行的。也正是由于无法实时收到回复，大家在交流的过程中，通常会事先把事情的来龙去脉尽量弄明白，并给出自己的调查结果、建议、不同方案的对比等等。
声誉，也许是很多 IT 从业人员还没有意思到的一项宝贵资产。简历是极容易作假的环节，良好的表达能力也可以让候选人通过面试，及时是背景调查也无法让面试官了解到候选人过往的细节。因此，是否有大厂经历、高学历，（或者是运气）在很大程度上决定着我们是否可以进入到更大的平台中。
然而，参与开源的经历、成就则通常是公开的，任何人都可以查阅到。因此，对于参与开源的每一位贡献者都会很关注自己的行为，以及带来的影响。而对于用人单位，也同样是可以对此很放心。
职业方向多样化 #  开源项目的健康发展，不仅仅需要优质的代码，更加需要不同角色的人的共同努力。从需求的收集、整理，功能实现、问题修复，以及技术推广、问题反馈等，一个正向的闭环机制是开源社区长久健康发展的秘诀。
从技术推广的角度来讲，通常的方法有：编写技术博客、视频教程、技术分享等等。做这些工作，会对技术总结、演讲技巧上有极大的提高。这对于以后考虑选择技术布道师这个岗位来说，应该会有很大的帮助。
如果平时在社区活动组织、协助上付出比较多的话，之后也许是可以走向开源社区运营的方向。
在企业内部，通常是职责分明，大多数研发没有机会直接接触到客户（用户），因而也难以培养产品思维。而对于开源项目的维护者，则为了让自己的产品更有竞争力、更加贴近最终用户的需求，则需要从产品整体来思考、规划、设计。借此，走向产品经理的路，自然也是极为可能。
其他 #  有一些刚刚踏入 IT 行业从事软件研发工作，但英文水平比较一般的人，在经过几年的工作后可能会觉得英文水平的高低似乎也不会对本职工作有多大影响。之后，不管是在搜索资料，还是阅读文档时，逐渐会对英文的资料敬而远之。甚至，当遇到把英文作为第一交流语言的开源社区、开源项目时，表示很不理解；明明都是中国人，却非要用英文。
这里，我们不讨论开源项目中到底应该以何种语言为首选。确认无疑的是，只要你愿意暂时放下已有的观念，潜心地、虚心地参与到开源社区中来，对于学习语言的看法一定会有很大改变的。人随心动，放空自我，随着社区一起成长，英文水平的大幅提高几乎是必然会发生的事情。
除了语言本身的学习、成长之外，参与开源还可以让你的思维方式、理念保持长久的年轻、不僵化。人总是会容易骄傲自满、固步自封，然而如果你始终坚持开源的基本原则的话，不管你获得过多大的成就，你也还会乐意和新加入的朋友一起畅聊。
参与开源的原动力 #  我们做任何事情，都由一定的动力驱使的，不管是内在的，还是外来的；抑或只是一个借口或者理由。不同的人，参与开源有着不同的原因。但，弄明白这个动因，是极为重要的。
有不少的声音提到，参与开源需要用“爱”发电。不知道第一次提出这个说法的人想要传达的信息是什么，但这句话极易使得对开源接触不深入的人产生误解。在经济和时间上都不富有的情况下，“爱好”显然不是一个强有力的驱动。很难想象到，仅凭借“爱好”就可以让你改变思维模式、在一个领域长久地耕耘。
如果把我们自身比作航行在大海上的一艘船的话，“爱好”可以帮助我们“导航”，而真正让我们得以“远航”的“发动机“还是和我们的职业密切相关的。至少，在社会主义实现之前应该是这样的。
参与开源的过程中，在选择技术领域、开源项目上，“爱好”在发挥着作用。但是，千万不要偏离了你的“全职工作”。至少，你需要找到二者之间的结合点。</description>
    </item>
    
  </channel>
</rss>
